/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution { 
    int count = 0;
    int res=0;
    public int kthSmallest(TreeNode root, int k) {
        helperMethod(root, k);
        
        return res;
    }
    
    public void helperMethod (TreeNode root, int k){
        if(root==null) return;    
        helperMethod(root.left, k);        
        count++; //normally in inorder traversal, you would put the "list.add(root.val)" but just increment count here instead cuz its the same concept
        if(count == k){
            res = root.val;
            return;
        }    
        helperMethod(root.right, k);      
    }   
}
