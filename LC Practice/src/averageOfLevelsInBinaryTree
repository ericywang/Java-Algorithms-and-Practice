/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> returnList = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        
        if(root == null)
            return returnList;
        
        queue.add(root);
        
        while(!queue.isEmpty()){
            int queueSize = queue.size();
            double count = 0;
            double sum = 0;
            
            for(int x = 0; x < queueSize; x++){
                TreeNode temp = queue.remove();
                sum = sum + temp.val;
                count+=1;
                
                
                if(temp.left != null) queue.add(temp.left);
                if(temp.right != null) queue.add(temp.right);
                                
            }
            
            double average = sum / count;
            returnList.add(average);            
        }
        return returnList;
    }
}
