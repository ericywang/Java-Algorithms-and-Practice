/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        TreeNode temp;
        List<List<Integer>> returnList = new ArrayList<>();
        List<Integer> smallList = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        
        if(root == null){
            return returnList;
        }
        
        queue.add(root);
        
        while(!queue.isEmpty()){
            
            int queueSize = queue.size();
            for(int x = 0; x < queueSize; x++){
                temp = queue.remove();
                smallList.add(temp.val);
                
                if(temp.left != null){
                    queue.add(temp.left); 
                }
                if(temp.right != null){
                    queue.add(temp.right);
                }
            
            }            
            if(!smallList.isEmpty()){
                returnList.add(new ArrayList<>(smallList));
                smallList.clear();
            }
            
        }
        
        
        return returnList;
        
    }
}
